# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Main.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets, QtQuick
from pathlib import Path
import cv2
import numpy as np
from QtCustom import QtImportDialog, QtProgressDialog
from Media import Video

playing = True
played = False
currentframe_pos = 0
CurrentVideo = Video("None", "", QtWidgets.QProgressBar)
preview_pose = False

# Thread class for running video in VideoPlayer
class VideoThread(QtCore.QObject):
    #ending_signal = QtCore.pyqtSignal(int)
    frame_signal = QtCore.pyqtSignal(np.ndarray)
    played_signal = QtCore.pyqtSignal()
    global playing
    global CurrentVideo

    def __init__(self):
        super().__init__()
        self.cap = cv2.VideoCapture(CurrentVideo.filename) 

    def run(self):
        #self.frame_rate = int(self.cap.get(cv2.CAP_PROP_FPS))
        print(CurrentVideo.frame_rate)
        #self.ending_signal.emit(self.cap.get(cv2.CAP_PROP_FRAME_COUNT))

        global currentframe_pos
        global played
        global preview_pose
        delay_time = int(1000 / CurrentVideo.frame_rate)
        while True:
            if playing:
                ret, frame = self.cap.read()

                if not ret:
                    played = True
                    self.played_signal.emit()
                else:
                    Image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
                    currentframe_pos = self.cap.get(cv2.CAP_PROP_POS_FRAMES)

                    if preview_pose:
                        CurrentVideo.draw_tracked_points(Image, int(currentframe_pos) -1)

                    self.frame_signal.emit(Image)
                    cv2.waitKey(delay_time)

            else:  
                if not played:    
                    ret, frame = self.cap.read()
                    if not ret:
                        played = True
                        self.played_signal.emit()
                    else:
                        self.cap.set(cv2.CAP_PROP_POS_FRAMES, currentframe_pos)
                        Image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

                        if preview_pose:
                            CurrentVideo.draw_tracked_points(Image, int(currentframe_pos) - 1)

                        self.frame_signal.emit(Image)
                else:
                    self.cap.set(cv2.CAP_PROP_POS_FRAMES, 0)

        self.cap.release()
            

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(1020, 600)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(5, 5, 5))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(5, 5, 5))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(5, 5, 5))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(5, 5, 5))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        MainWindow.setPalette(palette)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("UI/Icons/3DAPE.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("*{\n"
"   padding:0;\n"
"   margin:0;\n"
"}\n"
"\n"
"#MenuWindow{\n"
"   background-color:#2e2d2f\n"
"}\n"
"\n"
"#PreviewContainer{\n"
"   background-color:#2e2d2f;\n"
"}\n"
"\n"
"#TitleBar{\n"
"   background-color:#2e2d2f\n"
"}\n"
"\n"
"#ModelBox{\n"
"   border:1px solid gray;\n"
"   color:solid gray;\n"
"   border-radius:5px;\n"
"   margin-top: 1ex;\n"
"}\n"
"\n"
"#ModelBox::title{\n"
"   subcontrol-origin: margin;\n"
"   subcontrol-position:top center;\n"
"   padding:0 5px;\n"
"}\n"
"\n"
"#VideoBox{\n"
"   border:1px solid gray;\n"
"   border-radius:5px;\n"
"   margin-top: 1ex;\n"
"}\n"
"\n"
"#VideoBox::title{\n"
"   subcontrol-origin: margin;\n"
"   subcontrol-position:top center;\n"
"   padding:0 5px;\n"
"}\n"
"#listView{\n"
"   background-color: #29292b;\n"
"}\n"
"\n"
"#scrollArea{\n"
"   border: none;\n"
"}\n"
"\n"
"#scrollAreaWidgetContents{\n"
"   border: none;\n"
"   background-color: #2e2d2f;\n"
"}")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.centralwidget.setAutoFillBackground(False)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(1)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.MenuWindow = QtWidgets.QWidget(self.centralwidget)
        self.MenuWindow.setObjectName("MenuWindow")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.MenuWindow)
        self.verticalLayout_6.setContentsMargins(4, 4, 4, 8)
        self.verticalLayout_6.setSpacing(0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.widget_15 = QtWidgets.QWidget(self.MenuWindow)
        self.widget_15.setObjectName("widget_15")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.widget_15)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setSpacing(0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.pushButton = QtWidgets.QPushButton(self.widget_15)
        self.pushButton.setIcon(icon)
        self.pushButton.setIconSize(QtCore.QSize(30, 30))
        self.pushButton.setAutoDefault(True)
        self.pushButton.setDefault(True)
        self.pushButton.setFlat(True)
        self.pushButton.setObjectName("pushButton")
        self.gridLayout_2.addWidget(self.pushButton, 0, 0, 1, 1)
        self.verticalLayout_6.addWidget(self.widget_15, 0, QtCore.Qt.AlignTop)
        self.MenuContainer = QtWidgets.QWidget(self.MenuWindow)
        self.MenuContainer.setObjectName("MenuContainer")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.MenuContainer)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setSpacing(10)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.frame_3 = QtWidgets.QFrame(self.MenuContainer)
        self.frame_3.setStyleSheet("QPushButton{\n"
"   border-radius: 1px;\n"
"}\n"
"\n"
"")
        self.frame_3.setObjectName("frame_3")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.frame_3)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setSpacing(0)
        self.gridLayout_2.setObjectName("gridLayout_2")

    # Import Button
        self.Importbtn = QtWidgets.QPushButton(self.frame_3)
        self.Importbtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Importbtn.setStyleSheet("QPushButton:hover{\n"
"   icon: url(UI/Icons/downloadH.png);\n"
"}")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("UI/Icons/download.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Importbtn.setIcon(icon1)
        self.Importbtn.setIconSize(QtCore.QSize(30, 30))
        self.Importbtn.setObjectName("Importbtn")
        self.Importbtn.clicked.connect(self.ImportVideo)
        self.gridLayout_2.addWidget(self.Importbtn, 0, 0, 1, 1)

        self.verticalLayout_5.addWidget(self.frame_3)
        self.frame = QtWidgets.QFrame(self.MenuContainer)
        self.frame.setStyleSheet("QPushButton{\n"
"   border-radius: 1px;\n"
"}\n"
"\n"
"")
        self.frame.setObjectName("frame")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setSpacing(0)
        self.gridLayout_3.setObjectName("gridLayout_3")

    # Setting Button
        self.Settingbtn = QtWidgets.QPushButton(self.frame)
        self.Settingbtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Settingbtn.setStyleSheet("QPushButton:hover{\n"
"   icon: url(UI/Icons/settingH.png);\n"
"}")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("UI/Icons/setting.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Settingbtn.setIcon(icon2)
        self.Settingbtn.setIconSize(QtCore.QSize(30, 30))
        self.Settingbtn.setObjectName("Settingbtn")
        self.gridLayout_3.addWidget(self.Settingbtn, 0, 0, 1, 1)

        self.verticalLayout_5.addWidget(self.frame)
        self.verticalLayout_6.addWidget(self.MenuContainer, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignBottom)
        self.horizontalLayout.addWidget(self.MenuWindow)
        self.WorkWindow = QtWidgets.QWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.WorkWindow.sizePolicy().hasHeightForWidth())
        self.WorkWindow.setSizePolicy(sizePolicy)
        self.WorkWindow.setObjectName("WorkWindow")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.WorkWindow)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.TitleBar = QtWidgets.QWidget(self.WorkWindow)
        self.TitleBar.setObjectName("TitleBar")
        self.gridLayout = QtWidgets.QGridLayout(self.TitleBar)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.widget = QtWidgets.QWidget(self.TitleBar)
        self.widget.setObjectName("widget")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.widget)
        self.gridLayout_5.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_5.setSpacing(0)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.frame_2 = QtWidgets.QFrame(self.widget)
        self.frame_2.setStyleSheet("QPushButton{\n"
"   border-radius: 1px;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"   background-color: rgb(80, 80, 80);\n"
"}\n"
"\n"
"#CloseButton:hover{\n"
"   background-color: rgb(180, 5, 8);\n"
"}")
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setSpacing(0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")


    # Title Bar Icons
        self.MinimizeButton = QtWidgets.QPushButton(self.frame_2)
        palette = QtGui.QPalette()
        self.MinimizeButton.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.MinimizeButton.setFont(font)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("UI/Icons/minus.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.MinimizeButton.setIcon(icon2)
        self.MinimizeButton.setIconSize(QtCore.QSize(51, 38))
        self.MinimizeButton.setObjectName("MinimizeButton")
        self.horizontalLayout_2.addWidget(self.MinimizeButton)

        self.MaximizeButton = QtWidgets.QPushButton(self.frame_2)
        palette = QtGui.QPalette()
        self.MaximizeButton.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.MaximizeButton.setFont(font)
        self.maximizeicon = QtGui.QIcon()
        self.maximizeicon.addPixmap(QtGui.QPixmap("UI/Icons/maximize.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.minimizeicon = QtGui.QIcon()
        self.minimizeicon.addPixmap(QtGui.QPixmap("UI/Icons/minimize.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.MaximizeButton.setIcon(self.maximizeicon)
        self.MaximizeButton.setIconSize(QtCore.QSize(51, 38))
        self.MaximizeButton.setObjectName("MaximizeButton")
        self.horizontalLayout_2.addWidget(self.MaximizeButton)

        self.CloseButton = QtWidgets.QPushButton(self.frame_2)
        palette = QtGui.QPalette()
        self.CloseButton.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.CloseButton.setFont(font)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("UI/Icons/close.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.CloseButton.setIcon(icon4)
        self.CloseButton.setIconSize(QtCore.QSize(51, 38))
        self.CloseButton.setObjectName("CloseButton")
        self.horizontalLayout_2.addWidget(self.CloseButton)
        self.gridLayout_5.addWidget(self.frame_2, 0, 0, 1, 1)
        self.gridLayout.addWidget(self.widget, 0, 0, 1, 1, QtCore.Qt.AlignRight)
        self.verticalLayout.addWidget(self.TitleBar, 0, QtCore.Qt.AlignTop)

        self.PreviewWindow = QtWidgets.QWidget(self.WorkWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PreviewWindow.sizePolicy().hasHeightForWidth())
        self.PreviewWindow.setSizePolicy(sizePolicy)
        self.PreviewWindow.setObjectName("PreviewWindow")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.PreviewWindow)
        self.gridLayout_4.setContentsMargins(0, 1, 0, 0)
        self.gridLayout_4.setSpacing(0)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.PreviewContainer = QtWidgets.QWidget(self.PreviewWindow)
        self.PreviewContainer.setObjectName("PreviewContainer")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.PreviewContainer)
        self.gridLayout_6.setContentsMargins(8, 6, 8, 8)
        self.gridLayout_6.setSpacing(4)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.splitter = QtWidgets.QSplitter(self.PreviewContainer)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        self.splitter.setPalette(palette)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setHandleWidth(0)
        self.splitter.setObjectName("splitter")
        self.VideoWindow = QtWidgets.QWidget(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.VideoWindow.sizePolicy().hasHeightForWidth())
        self.VideoWindow.setSizePolicy(sizePolicy)
        self.VideoWindow.setMinimumSize(QtCore.QSize(450, 0))
        self.VideoWindow.setObjectName("VideoWindow")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.VideoWindow)
        self.gridLayout_7.setContentsMargins(0, 0, 4, 0)
        self.gridLayout_7.setSpacing(0)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.VideoBox = QtWidgets.QGroupBox(self.VideoWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.VideoBox.sizePolicy().hasHeightForWidth())
        self.VideoBox.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(150, 150, 150))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(150, 150, 150))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.VideoBox.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.VideoBox.setFont(font)
        self.VideoBox.setObjectName("VideoBox")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.VideoBox)
        self.verticalLayout_2.setContentsMargins(-1, 13, -1, -1)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.widget_4 = QtWidgets.QWidget(self.VideoBox)
        self.widget_4.setObjectName("widget_4")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.widget_4)
        self.gridLayout_10.setContentsMargins(0, 5, 0, 5)
        self.gridLayout_10.setObjectName("gridLayout_10")

    # Video Player
        self.thread = QtCore.QThread()
        self.thread_started = False
        self.VideoPlayer = QtWidgets.QLabel(self.widget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.VideoPlayer.sizePolicy().hasHeightForWidth())
        self.VideoPlayer.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(150, 150, 150))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(150, 150, 150))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.VideoPlayer.setPalette(palette)
        self.VideoPlayer.setScaledContents(True)
        self.VideoPlayer.setAlignment(QtCore.Qt.AlignCenter)
        self.VideoPlayer.setObjectName("VideoPlayer")
        self.gridLayout_10.addWidget(self.VideoPlayer, 0, 0, 1, 1)

        self.verticalLayout_2.addWidget(self.widget_4)
        self.widget_5 = QtWidgets.QWidget(self.VideoBox)
        self.widget_5.setObjectName("widget_5")

        self.gridLayout_11 = QtWidgets.QGridLayout(self.widget_5)
        self.gridLayout_11.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.widget_3 = QtWidgets.QWidget(self.widget_5)
        self.widget_3.setObjectName("widget_3")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.widget_3)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.widget_7 = QtWidgets.QWidget(self.widget_3)
        self.widget_7.setObjectName("widget_7")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.widget_7)
        self.gridLayout_12.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_12.setSpacing(0)
        self.gridLayout_12.setObjectName("gridLayout_12")

    # Video Control Buttons
        self.horizontalSlider = QtWidgets.QSlider(self.widget_7)
        #self.horizontalSlider.handle.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.horizontalSlider.setStyleSheet("QSlider{\n"
"   margin-top: 0px;\n"
"   margin-bottom: 0px;\n"
"   margin-right: 5px;\n"
"   margin-left: 5px;\n"
"}\n\n"                                            
"QSlider::groove{\n"                                            
"   border-radius: 2px;\n"
"   height: 4px;\n"
"   margin: 0px;\n"
"   background-color: #464749;\n"
"}\n\n"
"QSlider::handle{\n"
"   border: none;\n"
"   height: 10px;\n"
"   width: 10px;\n"
"   margin: -3px;\n"
"   border-radius: 5px;\n"
"   background-color: #fbfdfb;\n"
"}\n")
        self.horizontalSlider.valueChanged.connect(self.slider_value_change)
        self.horizontalSlider.sliderPressed.connect(self.slider_press)
        self.horizontalSlider.sliderReleased.connect(self.slider_released)
        self.slider_pressed = False
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.gridLayout_12.addWidget(self.horizontalSlider, 5, 5, 1, 1)
        self.verticalLayout_3.addWidget(self.widget_7, 0, QtCore.Qt.AlignTop)
        self.widget_9 = QtWidgets.QWidget(self.widget_3)
        self.widget_9.setObjectName("widget_9")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.widget_9)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setSpacing(0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.widget_8 = QtWidgets.QWidget(self.widget_9)
        self.widget_8.setObjectName("widget_8")
        self.horizontalLayout_3.addWidget(self.widget_8)
        self.widget_10 = QtWidgets.QWidget(self.widget_9)
        self.widget_10.setObjectName("widget_10")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.widget_10)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setSpacing(0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        
        self.PreviousFrame = QtWidgets.QPushButton(self.widget_10)
        self.PreviousFrame.clicked.connect(self.GoBackward)
        previous_icon = QtGui.QIcon()
        previous_icon.addPixmap(QtGui.QPixmap("UI/Icons/previous.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.PreviousFrame.setIcon(previous_icon)
        self.PreviousFrame.setFlat(True)
        self.PreviousFrame.setObjectName("PreviousFrame")
        self.horizontalLayout_4.addWidget(self.PreviousFrame)
        
        self.PlaynPause = QtWidgets.QPushButton(self.widget_10)
        self.PlaynPause.clicked.connect(self.TogglePlay)
        self.playicon = QtGui.QIcon()
        self.playicon.addPixmap(QtGui.QPixmap("UI/Icons/play.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pauseicon = QtGui.QIcon()
        self.pauseicon.addPixmap(QtGui.QPixmap("UI/Icons/pause.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.PlaynPause.setIcon(self.playicon)
        self.PlaynPause.setFlat(True)
        self.PlaynPause.setObjectName("PlaynPause")
        self.horizontalLayout_4.addWidget(self.PlaynPause)
        
        self.NextFrame = QtWidgets.QPushButton(self.widget_10)
        self.NextFrame.clicked.connect(self.GoForward)
        next_icon = QtGui.QIcon()
        next_icon.addPixmap(QtGui.QPixmap("UI/Icons/next.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.NextFrame.setIcon(next_icon)
        self.NextFrame.setFlat(True)
        self.NextFrame.setObjectName("NextFrame")
        self.horizontalLayout_4.addWidget(self.NextFrame)

        self.horizontalLayout_3.addWidget(self.widget_10, 0, QtCore.Qt.AlignHCenter)
        self.widget_11 = QtWidgets.QWidget(self.widget_9)
        self.widget_11.setObjectName("widget_11")
        self.gridLayout_16 = QtWidgets.QGridLayout(self.widget_11)
        self.gridLayout_16.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_16.setSpacing(0)
        self.gridLayout_16.setObjectName("gridLayout_16")

        self.PreviewBtn = QtWidgets.QPushButton(self.widget_11)
        self.PreviewBtn.clicked.connect(self.Preview_points)
        self.PreviewBtn.setStyleSheet("QPushButton{\n"
"   border: 1px solid gray;\n"
"   border-radius: 10px;\n"
"   background-color: #29292b;\n"
"   color: #969696;\n"
"   padding-left: 15px;\n"
"   padding-right: 15px;\n"
"   padding-top: 5px;\n"
"   padding-bottom: 5px;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"   color: #fbfdfb;\n"
"   border-color: #fbfdfb;\n"
"}\n"
"\n"
"QPushButton:selected{\n"
"   background-color: #464749;\n"
"   color: #fbfdfb;\n"
"}")
        self.PreviewBtn.setObjectName("PreviewBtn")
        self.gridLayout_16.addWidget(self.PreviewBtn, 0, 0, 1, 1)

        self.horizontalLayout_3.addWidget(self.widget_11, 0, QtCore.Qt.AlignRight)
        self.verticalLayout_3.addWidget(self.widget_9, 0, QtCore.Qt.AlignTop)
        self.gridLayout_11.addWidget(self.widget_3, 0, 0, 1, 1)
        self.widget_6 = QtWidgets.QWidget(self.widget_5)
        self.widget_6.setMinimumSize(QtCore.QSize(0, 0))
        self.widget_6.setObjectName("widget_6")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.widget_6)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setSpacing(3)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.widget_12 = QtWidgets.QWidget(self.widget_6)
        self.widget_12.setObjectName("widget_12")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.widget_12)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setSpacing(0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.widget_14 = QtWidgets.QWidget(self.widget_12)
        self.widget_14.setObjectName("widget_14")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.widget_14)
        self.gridLayout_14.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_14.setSpacing(0)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.BrowserLabel = QtWidgets.QLabel(self.widget_14)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(150, 150, 150))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(150, 150, 150))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.BrowserLabel.setPalette(palette)
        self.BrowserLabel.setObjectName("BrowserLabel")
        self.gridLayout_14.addWidget(self.BrowserLabel, 0, 0, 1, 1)
        self.horizontalLayout_5.addWidget(self.widget_14)
        self.verticalLayout_4.addWidget(self.widget_12)
        self.widget_13 = QtWidgets.QWidget(self.widget_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.widget_13.sizePolicy().hasHeightForWidth())
        self.widget_13.setSizePolicy(sizePolicy)
        self.widget_13.setObjectName("widget_13")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.widget_13)
        self.gridLayout_13.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_13.setSpacing(0)
        self.gridLayout_13.setObjectName("gridLayout_13")


        self.listView = QtWidgets.QListWidget(self.widget_13)
        self.VideoList = []
        self.listView.currentRowChanged.connect(self.OnItemClicked)
        self.listView.setStyleSheet("QListWidget{\n"
#"border: none;\n"
"}\n\n"
"QListView::item{\n"
"padding: 10px;\n"
"border: none;\n"
"height: 25px;\n"
"color: #969696;\n"
"border-radius : 3px;\n"
"background : #2e2d2f;\n"
"}\n\n"
"QListView::item:hover{\n"
"border: none;\n"
"color: #fbfdfb;\n"
"background: #464749;\n"
"}\n\n"
"QListView::item:selected{\n"
"border: none;\n"
"color: #fbfdfb;\n"
"background: #29292b;\n"
"}")
        self.listView.setSpacing(1)
        self.listView.setObjectName("listView")
        self.gridLayout_13.addWidget(self.listView, 0, 0, 1, 1)
        self.verticalLayout_4.addWidget(self.widget_13)
        self.gridLayout_11.addWidget(self.widget_6, 1, 0, 1, 1)
        self.verticalLayout_2.addWidget(self.widget_5)
        self.gridLayout_7.addWidget(self.VideoBox, 0, 0, 1, 1)

        self.ModelWindow = QtWidgets.QWidget(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ModelWindow.sizePolicy().hasHeightForWidth())
        self.ModelWindow.setSizePolicy(sizePolicy)
        self.ModelWindow.setMinimumSize(QtCore.QSize(450, 0))
        self.ModelWindow.setObjectName("ModelWindow")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.ModelWindow)
        self.gridLayout_8.setContentsMargins(4, 0, 0, 0)
        self.gridLayout_8.setSpacing(0)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.ModelBox = QtWidgets.QGroupBox(self.ModelWindow)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(150, 150, 150))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(150, 150, 150))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.ModelBox.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.ModelBox.setFont(font)
        self.ModelBox.setObjectName("ModelBox")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.ModelBox)
        self.gridLayout_9.setContentsMargins(-1, 13, -1, -1)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.ModelWidget = QtWidgets.QWidget(self.ModelBox)
        self.ModelWidget.setObjectName("ModelWidget")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.ModelWidget)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.ModelViewer = QtWidgets.QWidget(self.ModelWidget)
        self.ModelViewer.setObjectName("ModelViewer")
        self.gridLayout_15 = QtWidgets.QGridLayout(self.ModelViewer)
        self.gridLayout_15.setContentsMargins(0, 5, 0, 5)
        self.gridLayout_15.setSpacing(0)
        self.gridLayout_15.setObjectName("gridLayout_15")

        self.ModelView = QtQuick.QQuickView()
        self.ModelView.setResizeMode(QtQuick.QQuickView.SizeRootObjectToView)
        self.ModelView.setSource(QtCore.QUrl.fromLocalFile('Renderer.qml'))

        self.ModelViewPort = QtWidgets.QWidget(self.ModelViewer)
        self.ModelViewPort = QtWidgets.QWidget.createWindowContainer(self.ModelView)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ModelViewPort.sizePolicy().hasHeightForWidth())
        self.ModelViewPort.setSizePolicy(sizePolicy)
        self.ModelViewPort.setObjectName("ModelViewPort")
        self.gridLayout_15.addWidget(self.ModelViewPort, 0, 0, 1, 1)

        self.verticalLayout_7.addWidget(self.ModelViewer)
        self.widget_17 = QtWidgets.QWidget(self.ModelWidget)
        self.widget_17.setObjectName("widget_17")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.widget_17)
        self.verticalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_8.setSpacing(6)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.widget_16 = QtWidgets.QWidget(self.widget_17)
        self.widget_16.setObjectName("widget_16")
        self.gridLayout_21 = QtWidgets.QGridLayout(self.widget_16)
        self.gridLayout_21.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_21.setSpacing(0)
        self.gridLayout_21.setObjectName("gridLayout_21")
        self.scrollArea = QtWidgets.QScrollArea(self.widget_16)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea.sizePolicy().hasHeightForWidth())
        self.scrollArea.setSizePolicy(sizePolicy)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 420, 237))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.gridLayout_21.addWidget(self.scrollArea, 0, 0, 1, 1)
        self.verticalLayout_8.addWidget(self.widget_16)
        self.widget_18 = QtWidgets.QWidget(self.widget_17)
        self.widget_18.setObjectName("widget_18")
        self.gridLayout_17 = QtWidgets.QGridLayout(self.widget_18)
        self.gridLayout_17.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_17.setSpacing(0)
        self.gridLayout_17.setObjectName("gridLayout_17")
        self.widget_19 = QtWidgets.QWidget(self.widget_18)
        self.widget_19.setObjectName("widget_19")
        self.gridLayout_18 = QtWidgets.QGridLayout(self.widget_19)
        self.gridLayout_18.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_18.setObjectName("gridLayout_18")
        self.frame_3 = QtWidgets.QFrame(self.widget_19)
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.gridLayout_19 = QtWidgets.QGridLayout(self.frame_3)
        self.gridLayout_19.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_19.setSpacing(0)
        self.gridLayout_19.setObjectName("gridLayout_19")

        self.ImportModelBtn = QtWidgets.QPushButton(self.frame_3)
        self.ImportModelBtn.clicked.connect(self.open_model_dir)
        self.ImportModelBtn.setStyleSheet("QPushButton{\n"
"   border: 1px solid gray;\n"
"   border-radius: 10px;\n"
"   background-color: #29292b;\n"
"   color: #969696;\n"
"   padding-left: 15px;\n"
"   padding-right: 15px;\n"
"   padding-top: 5px;\n"
"   padding-bottom: 5px;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"   color: #fbfdfb;\n"
"   border-color: #fbfdfb;\n"
"}\n"
"\n"
"QPushButton:selected{\n"
"   background-color: #464749;\n"
"   color: #fbfdfb;\n"
"}")
        self.ImportModelBtn.setObjectName("ImportModelBtn")
        self.gridLayout_19.addWidget(self.ImportModelBtn, 0, 0, 1, 1)

        self.gridLayout_18.addWidget(self.frame_3, 0, 0, 1, 1)
        self.frame_4 = QtWidgets.QFrame(self.widget_19)
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.gridLayout_20 = QtWidgets.QGridLayout(self.frame_4)
        self.gridLayout_20.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_20.setSpacing(0)
        self.gridLayout_20.setObjectName("gridLayout_20")

        self.ExportModelBtn = QtWidgets.QPushButton(self.frame_4)
        self.ExportModelBtn.clicked.connect(self.export_model)
        self.ExportModelBtn.setStyleSheet("QPushButton{\n"
"   border: 1px solid gray;\n"
"   border-radius: 10px;\n"
"   background-color: #29292b;\n"
"   color: #969696;\n"
"   padding-left: 15px;\n"
"   padding-right: 15px;\n"
"   padding-top: 5px;\n"
"   padding-bottom: 5px;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"   color: #fbfdfb;\n"
"   border-color: #fbfdfb;\n"
"}\n"
"\n"
"QPushButton:selected{\n"
"   background-color: #464749;\n"
"   color: #fbfdfb;\n"
"}")
        self.ExportModelBtn.setObjectName("ExportModelBtn")
        self.gridLayout_20.addWidget(self.ExportModelBtn, 0, 0, 1, 1)

        self.gridLayout_18.addWidget(self.frame_4, 0, 1, 1, 1)
        self.gridLayout_17.addWidget(self.widget_19, 0, 0, 1, 1, QtCore.Qt.AlignRight | QtCore.Qt.AlignBottom)
        self.verticalLayout_8.addWidget(self.widget_18, 0, QtCore.Qt.AlignBottom)
        self.verticalLayout_7.addWidget(self.widget_17)
        self.gridLayout_9.addWidget(self.ModelWidget, 0, 0, 1, 1)
        self.gridLayout_8.addWidget(self.ModelBox, 0, 0, 1, 1)
        self.gridLayout_6.addWidget(self.splitter, 0, 0, 1, 1)
        self.gridLayout_4.addWidget(self.PreviewContainer, 0, 0, 1, 1)
        self.verticalLayout.addWidget(self.PreviewWindow)
        self.horizontalLayout.addWidget(self.WorkWindow)
        MainWindow.setCentralWidget(self.centralwidget)
        self.Imported = False

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
            
# Import Video Functions
    def ImportVideo(self):
        self.ImportDialog = QtWidgets.QDialog()
        self.Importui = QtImportDialog()
        self.Importui.setupUi(self.ImportDialog)

        self.Importui.BrowseBtn.clicked.connect(self.open_vid_dir)

        self.Importui.buttonBox.accepted.connect(self.OnImport)

        self.Importui.buttonBox.rejected.connect(self.ImportDialog.close)

        self.ImportDialog.exec_()

    def open_vid_dir(self):
        filename, ok = QtWidgets.QFileDialog.getOpenFileName(
            self.ImportDialog,
            "Select a Video File",
            "",
            "Videos (*.mp4 *.mkv)"
        )
        if filename:
            path = Path(filename)
            self.Imported = True
            self.Importui.lineEdit.setText(str(path))

    def open_model_dir(self):
        filename, ok = QtWidgets.QFileDialog.getOpenFileName(
            self.ModelViewPort,
            "Select a 3D File",
            "",
            "Videos (*.fbx *.obj)"
        )
        if filename:
            pass

    def export_model(self):
        import shutil
        file_dialog = QtWidgets.QFileDialog()
        file_dialog.setAcceptMode(QtWidgets.QFileDialog.AcceptSave)
        file_dialog.setNameFilter("fbx (*.fbx);;3ds (*.3ds)")
        file_dialog.selectFile("Test.fbx")

        if file_dialog.exec_() == QtWidgets.QFileDialog.Accepted:
            self.file_path = file_dialog.selectedFiles()[0]

        if self.file_path:
            temp_bar = QtWidgets.QProgressBar()
            temp_bar.show()
            temp_bar.setMaximum(100)
            source_file_path = "Tests/Fraud/FirstTest_Adult_Male.fbx"
            # source_filename = source_file_path.split("/")[-1]
            # directory_path = os.path.dirname(self.file_path)
            target_file_path = self.file_path  # directory_path + "/" + source_filename
            shutil.copy2(source_file_path, target_file_path)
            i = 1
            while True:
                temp_bar.setValue(i)
                i = i + 1
                if(int(temp_bar.value()) >= 100):
                    temp_bar.close()
                    break
                cv2.waitKey(20)

            #temp_bar.close()
            '''with open(source_file_path, 'r') as source_file:
                content = source_file.read()
            with open(self.file_path, 'w') as file:
                file.write(content)'''
   
    def OnImport(self):
        vid_type = self.Importui.comboBox.currentText()
        vid_path = self.Importui.lineEdit.text()

        self.ImportDialog.close()

        #

        self.ImportingDialog = QtWidgets.QDialog()
        self.imp_progress = QtWidgets.QProgressBar()
        #self.Importingui = QtProgressDialog(self.imp_progress)
        #self.Importingui.setupUi(self.ImportingDialog)
        #self.Importbar = self.Importingui.progressBar

        self.imp_progress.show()


        self.VideoList.append(Video(vid_type, vid_path, self.imp_progress))

        self.imp_progress.setMaximum(self.VideoList[-1].total_frames)

        vid_data = vid_type + '   :     ' + vid_path
        self.listView.addItem(vid_data)

                 
    def OnItemClicked(self, current_row):

        global CurrentVideo
        CurrentVideo = self.VideoList[int(current_row)]

        if not self.thread_started:
            self.worker = VideoThread()
            self.setRange(CurrentVideo.total_frames)
            #self.worker.ending_signal.connect(self.setRange)
            self.worker.frame_signal.connect(self.UpdateVideoPlayer)
            self.worker.played_signal.connect(self.PauseVideo)

            self.worker.moveToThread(self.thread)
            self.thread.started.connect(self.worker.run)
            self.PlaynPause.setIcon(self.pauseicon)

            self.thread.start()
            self.thread_started = True

        else:
            self.thread.terminate()
            self.worker.cap = cv2.VideoCapture(CurrentVideo.filename)
            self.setRange(CurrentVideo.total_frames)
            self.thread.start()


# Slider Functions
    def slider_press(self):
        self.slider_pressed = True

    def slider_released(self):
        global sliderpaused
        self.slider_pressed = False
        sliderpaused = False

    def slider_value_change(self, value):
        if(self.slider_pressed):
            self.SetTimeLine(value)

    def setRange(self, count):
        self.horizontalSlider.setRange(0, count)

# Video Player Functions
    def UpdateVideoPlayer(self, frame):
        global currentframe_pos
        h, w, c = frame.shape
        bytes_per_line = w * c
        q_image = QtGui.QImage(frame.data, w, h, bytes_per_line, QtGui.QImage.Format_RGB888)
        pixmap = QtGui.QPixmap.fromImage(q_image)
        video_width, video_height = self.VideoPlayer.size().width(), self.VideoPlayer.size().height()
        scaled_pixmap = pixmap.scaled(video_width, video_height, QtCore.Qt.KeepAspectRatio, QtCore.Qt.SmoothTransformation)
        self.VideoPlayer.setPixmap(scaled_pixmap)
        self.horizontalSlider.setValue(currentframe_pos)

    def PauseVideo(self):
        global playing
        playing = False
        self.PlaynPause.setIcon(self.playicon)

    def SetTimeLine(self, frame_pos):
        self.PauseVideo()
        global currentframe_pos
        if frame_pos == -1:
            currentframe_pos = currentframe_pos - 1 
        elif frame_pos == -2:
            currentframe_pos = currentframe_pos + 1
        else:
            currentframe_pos = frame_pos

    def GoBackward(self):
        self.SetTimeLine(-1)

    def GoForward(self):
        self.SetTimeLine(-2)  

    def TogglePlay(self):
        global playing
        global played
        if(self.Imported):

            if(played):
                playing = True
                played = False
                self.PlaynPause.setIcon(self.pauseicon)
            else:
                if(playing):
                    playing = False
                    self.PlaynPause.setIcon(self.playicon)
                else:
                    playing = True
                    self.PlaynPause.setIcon(self.pauseicon)

    def Preview_points(self):
        global preview_pose
        if preview_pose:
            preview_pose = False
        else:
            preview_pose = True

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "3DAPE"))
        self.Importbtn.setToolTip(_translate("MainWindow", "Import"))
        self.Settingbtn.setToolTip(_translate("MainWindow", "Settings"))
        self.VideoBox.setTitle(_translate("MainWindow", "Video"))
        self.VideoPlayer.setText(_translate("MainWindow", "Video Here"))
        self.PreviewBtn.setText(_translate("MainWindow", "Preview"))
        self.BrowserLabel.setText(_translate("MainWindow", "Content Browser"))
        self.ModelBox.setTitle(_translate("MainWindow", "Model"))
        self.ImportModelBtn.setText(_translate("MainWindow", "Import"))
        self.ExportModelBtn.setText(_translate("MainWindow", "Export"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
